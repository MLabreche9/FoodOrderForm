{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\t530\\\\Desktop\\\\React the complete Guide\\\\17-Forms-FoodOrder\\\\01-starting-project\\\\src\\\\components\\\\Cart\\\\Checkout.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from 'react';\nimport classes from './Checkout.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isEmpty = value = value.trim().length === 0;\n\nconst isNotFiveChars = value => value.trim().length !== 5;\n\nconst Checkout = props => {\n  _s();\n\n  const [formInputsValidity, setFormInputsValidity] = useState({\n    name: true,\n    street: true,\n    city: true,\n    postalCode: true\n  });\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalCodeInputRef = useRef();\n  const cityInputRef = useRef();\n\n  const confirmHandler = event => {\n    event.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredStreet = streetInputRef.current.value;\n    const enteredPostalCode = postalCodeInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\n    const enteredCityIsValid = !isEmpty(enteredCity);\n    const enteredPostalCodeIsValid = !isNotFiveChars(enteredPostalCode);\n    setFormInputsValidity({\n      name: enteredNameIsValid,\n      street: enteredStreetIsValid,\n      city: enteredCityIsValid,\n      postalCode: enteredPostalCodeIsValid\n    });\n    const formIsValid = enteredNameIsValid && enteredStreetIsValid && enteredCityIsValid && enteredPostalCodeIsValid;\n\n    if (formIsValid) {\n      return;\n    } // Submit cart data\n\n  };\n\n  const nameControlClasses = `${classes.control} ${formInputsValidity.name ? '' : classes.invalid}`;\n  const streetControlClasses = `${classes.control} ${formInputsValidity.street ? '' : classes.invalid}`;\n  const postalControlClasses = `${classes.control} ${formInputsValidity.postalCode ? '' : classes.invalid}`;\n  const cityControlClasses = `${classes.control} ${formInputsValidity.city ? '' : classes.invalid}`;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 5\n      }, this), !formInputsValidity.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid name!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: streetControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        ref: streetInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 5\n      }, this), !formInputsValidity.street && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid street!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postal\",\n        ref: postalCodeInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 5\n      }, this), !formInputsValidity.postalCode && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid Postal Code!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        ref: cityInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 5\n      }, this), !formInputsValidity.city && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid city!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Checkout, \"5/8EWMyy5eyLhdTtu3RUwf/LZwc=\");\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"sources":["C:/Users/t530/Desktop/React the complete Guide/17-Forms-FoodOrder/01-starting-project/src/components/Cart/Checkout.js"],"names":["useRef","useState","classes","isEmpty","value","trim","length","isNotFiveChars","Checkout","props","formInputsValidity","setFormInputsValidity","name","street","city","postalCode","nameInputRef","streetInputRef","postalCodeInputRef","cityInputRef","confirmHandler","event","preventDefault","enteredName","current","enteredStreet","enteredPostalCode","enteredCity","enteredNameIsValid","enteredStreetIsValid","enteredCityIsValid","enteredPostalCodeIsValid","formIsValid","nameControlClasses","control","invalid","streetControlClasses","postalControlClasses","cityControlClasses","form","actions","onCancel","submit"],"mappings":"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","sourcesContent":["import { useRef, useState } from 'react';\r\n\r\nimport classes from './Checkout.module.css';\r\n\r\nconst isEmpty = (value = value.trim().length === 0);\r\nconst isNotFiveChars = (value) => value.trim().length !== 5;\r\n\r\nconst Checkout = (props) => {\r\n\tconst [formInputsValidity, setFormInputsValidity] = useState({\r\n\t\tname: true,\r\n\t\tstreet: true,\r\n\t\tcity: true,\r\n\t\tpostalCode: true\r\n\t});\r\n\r\n\tconst nameInputRef = useRef();\r\n\tconst streetInputRef = useRef();\r\n\tconst postalCodeInputRef = useRef();\r\n\tconst cityInputRef = useRef();\r\n\r\n\tconst confirmHandler = (event) => {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tconst enteredName = nameInputRef.current.value;\r\n\t\tconst enteredStreet = streetInputRef.current.value;\r\n\t\tconst enteredPostalCode = postalCodeInputRef.current.value;\r\n\t\tconst enteredCity = cityInputRef.current.value;\r\n\r\n\t\tconst enteredNameIsValid = !isEmpty(enteredName);\r\n\t\tconst enteredStreetIsValid = !isEmpty(enteredStreet);\r\n\t\tconst enteredCityIsValid = !isEmpty(enteredCity);\r\n\t\tconst enteredPostalCodeIsValid = !isNotFiveChars(enteredPostalCode);\r\n\r\n\t\tsetFormInputsValidity({\r\n\t\t\tname: enteredNameIsValid,\r\n\t\t\tstreet: enteredStreetIsValid,\r\n\t\t\tcity: enteredCityIsValid,\r\n\t\t\tpostalCode: enteredPostalCodeIsValid\r\n\t\t});\r\n\t\tconst formIsValid =\r\n\t\t\tenteredNameIsValid &&\r\n\t\t\tenteredStreetIsValid &&\r\n\t\t\tenteredCityIsValid &&\r\n\t\t\tenteredPostalCodeIsValid;\r\n\r\n\t\tif (formIsValid) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// Submit cart data\r\n\t};\r\n\r\n\tconst nameControlClasses = `${classes.control} ${\r\n\t\tformInputsValidity.name ? '' : classes.invalid\r\n\t}`;\r\n\tconst streetControlClasses = `${classes.control} ${\r\n\t\tformInputsValidity.street ? '' : classes.invalid\r\n\t}`;\r\n\tconst postalControlClasses = `${classes.control} ${\r\n\t\tformInputsValidity.postalCode ? '' : classes.invalid\r\n\t}`;\r\n\tconst cityControlClasses = `${classes.control} ${\r\n\t\tformInputsValidity.city ? '' : classes.invalid\r\n\t}`;\r\n\r\n\treturn (\r\n\t\t<form className={classes.form} onSubmit={confirmHandler}>\r\n\t\t\t<div className={nameControlClasses}>\r\n\t\t\t\t<label htmlFor='name'>Your Name</label>\r\n\t\t\t\t<input type='text' id='name' ref={nameInputRef} />\r\n\t\t\t\t{!formInputsValidity.name && <p>Please enter a valid name!</p>}\r\n\t\t\t</div>\r\n\t\t\t<div className={streetControlClasses}>\r\n\t\t\t\t<label htmlFor='street'>Street</label>\r\n\t\t\t\t<input type='text' id='street' ref={streetInputRef} />\r\n\t\t\t\t{!formInputsValidity.street && <p>Please enter a valid street!</p>}\r\n\t\t\t</div>\r\n\t\t\t<div className={classes.control}>\r\n\t\t\t\t<label htmlFor='postal'>Postal Code</label>\r\n\t\t\t\t<input type='text' id='postal' ref={postalCodeInputRef} />\r\n\t\t\t\t{!formInputsValidity.postalCode && (\r\n\t\t\t\t\t<p>Please enter a valid Postal Code!!</p>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t\t<div className={classes.control}>\r\n\t\t\t\t<label htmlFor='city'>City</label>\r\n\t\t\t\t<input type='text' id='city' ref={cityInputRef} />\r\n\t\t\t\t{!formInputsValidity.city && <p>Please enter a valid city!</p>}\r\n\t\t\t</div>\r\n\t\t\t<div className={classes.actions}>\r\n\t\t\t\t<button type='button' onClick={props.onCancel}>\r\n\t\t\t\t\tCancel\r\n\t\t\t\t</button>\r\n\t\t\t\t<button className={classes.submit}>Confirm</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default Checkout;\r\n"]},"metadata":{},"sourceType":"module"}